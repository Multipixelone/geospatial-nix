name: Test containers

on:
  workflow_call:

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  test-function:
    strategy:
      fail-fast: false
      matrix:
        container:
          - gdal-script
          - python
          - py-server
        os:
          - ubuntu-22.04

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install nix
      uses: cachix/install-nix-action@v24

    - name: Setup cachix
      uses: cachix/cachix-action@v13
      with:
        name: geonix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Point Geonix input to the local source code directory
      run: |
        sed -i.orig "s|geonix.url = \".*\";|geonix.url = \"path:${GITHUB_WORKSPACE}\";|" flake.nix
      working-directory: tests/containers

    - name: Flake check
      run: >
        nix flake check --impure --no-build --accept-flake-config
      working-directory: tests/containers


    # gdal-script
    - name: Test container (if gdal-script container)
      run: |
        nix develop --impure --accept-flake-config --command geonix container gdal-script
        sleep 1
        docker run --rm container-tests-gdal-script:latest | grep GDAL
      if: ${{ matrix.container == 'gdal-script' }}
      working-directory: tests/containers


    # python container
    - name: Test container (if python container)
      run: |
        nix develop --impure --accept-flake-config --command geonix container python
        sleep 1
        docker run --rm container-tests-python:latest 'import fiona; print(fiona.supported_drivers)'
      if: ${{ matrix.container == 'python' }}
      working-directory: tests/containers


    # py-server-script
    - name: Test container (if py-server container)
      run: |
        nix develop --impure --accept-flake-config --command geonix container py-server
        sleep 1
        docker run -d --rm -p 8000:8000 container-tests-py-server:latest
        sleep 1
        curl --retry 10 --retry-all-errors localhost:8000 | grep 'Directory listing'
      if: ${{ matrix.container == 'py-server' }}
      working-directory: tests/containers
